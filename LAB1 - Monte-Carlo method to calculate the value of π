#include <stdlib.h>
#include <stdio.h>
#include <omp.h>
#include <time.h>
#include <sys/time.h>
#define SEED 35791246
//http://www.dartmouth.edu/~rc/classes/soft_dev/C_simple_ex.html
main(int argc, char* argv)
{
    int niter=0;
    double x,y;
    int i,count=0; /* # of points in the 1st quadrant of unit circle */
    double z;
    double pi;
    printf("Enter the number of iterations used to estimate pi: ");
    scanf("%d",&niter);
    /* initialize random numbers */
    srand(SEED);
    count=0;
    for ( i=0; i<niter; i++) {
        x = (double)rand()/RAND_MAX;
        y = (double)rand()/RAND_MAX;
        z = x*x+y*y;
        if (z<=1) count++;
    }
    pi=(double)count/niter*4;
    printf("# of trials= %d , estimate of pi is %g \n",niter,pi);
}
long double Calculate_Pi_Parallel(long long number_of_tosses) {
    return 0;
}
int main() {
    struct timeval start, end;
    long long num_tosses = 10000000;
    printf("Timing sequential...\n");
    gettimeofday(&start, NULL);
    long double sequential_pi = Calculate_Pi_Sequential(num_tosses);
    gettimeofday(&end, NULL);
    printf("Took %f seconds\n\n", end.tv_sec - start.tv_sec + (double) (end.tv_usec - start.tv_usec) / 1000000);
    printf("Timing parallel...\n");
    gettimeofday(&start, NULL);
    long double parallel_pi = Calculate_Pi_Parallel(num_tosses);
    gettimeofday(&end, NULL);
    printf("Took %f seconds\n\n", end.tv_sec - start.tv_sec + (double) (end.tv_usec - start.tv_usec) / 1000000);
    // This will print the result to 10 decimal places
    printf("π = %.10Lf (sequential)", sequential_pi);
    printf("π = %.10Lf (parallel)", parallel_pi);
    return 0;
}
